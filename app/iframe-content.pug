doctype html
html(lang='en')
	head
		meta(charset='UTF-8')
		meta(name='viewport', content='width=device-width,initial-scale=1')
		title Iframe Content
		link(href='https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css', rel='stylesheet')
	body.bg-gray-100.p-4
		.bg-white.p-4.rounded-md.shadow-md
			label.block.text-sm.font-medium.text-gray-700(for='textInput') Your Text:
			textarea#textInput.mt-1.p-2.w-full.h-16.border.rounded-md
			button(onclick='submitPrompt()', id="generateBtn").mt-2.px-4.py-2.bg-blue-500.text-white.rounded-md.hover_bg-blue-600
				| Generate
		
		script(src=asset('javascripts/fetchUserData.js'))
		script.
			document.getElementById('generateBtn').addEventListener('click', function() {
			    const textInput = document.getElementById('textInput').value;
			    
			    // Define a function that returns a promise which resolves with the API response
			    async function postData(url = '', data = {}) {
			        const response = await fetch(url, {
			            method: 'POST',
			            headers: {
			                'Content-Type': 'application/json'
			            },
			            body: JSON.stringify(data)
			        });
			        
			        if (!response.ok) {
			            throw new Error(`HTTP error! Status: ${response.status}`);
			        }
			        
			        return response.json(); // Parse and return the JSON response body
			    }
			    
			    // Use the function
			    postData('http://127.0.0.1:5000/process_repo', { user_prompt: textInput })
			        .then(data => {
			            console.log(data); // Handle data from the API here
			        })
			        .catch((error) => {
			            console.error('Error:', error); // Handle errors here
			        });
			});